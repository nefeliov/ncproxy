server {
        listen 80;
        listen [::]:80;

        # Set server name to only answer desired requests
        server_name domain.com;

        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        return 301 https://domain.com$request_uri;
}


server {
        #Ports configuration
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # TLS certificate
        # Use self signed certificate from ssl-cert
        include snippets/snakeoil.conf;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # SSL modern configuration from Mozilla SSL configuration generator
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
         add_header Strict-Transport-Security max-age=15768000;

        # Use OpenDNS as secure DNS resolver
        resolver 208.67.222.222;

        # Set standar proxy headers
        proxy_set_header Forwarded $proxy_add_forwarded;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Ensure nginx works with a controlled directory
        root /var/www/html;

        # Set server name to catch requests
        server_name domain.com;

        # Enable encryption for proxy conneciton, and configure
        # the proxies.
        location /resource2/ {
                proxy_pass https://20.20.20.20;
        }

        location / {
                proxy_pass https://10.10.10.10;
        }

}
